name: IoT Node - LoRaWAN -  Firmware build Action
on:
  push:
    branches:
      - main

  workflow_dispatch:
    branches:

# env:
#   DATALOGGER_IOT_APP_KEY: ${{ secrets.DATALOGGER_IOT_APP_KEY }}
#   DATALOGGER_IOT_ID_KEY: ${{ secrets.DATALOGGER_IOT_ID_KEY }}

jobs:
  build:
    name: Build IoT Node - LoRaWAN Firmware
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo and submodules
        uses: actions/checkout@v3
        with:
          ref: main

      # checkout flux-sdk
      - name: Checkout the flux-sdk
        run: |
          git clone --branch feature/rp2350-port https://github.com/sparkfun/flux-sdk.git
          echo "FLUX_SDK_PATH=`pwd`/flux-sdk" >> $GITHUB_ENV

      # Run cmake - this will build a custom SparkFun_Flux library we can use with
      # the Arduino CLI
      - name: Run CMake
        run: |
          echo $FLUX_SDK_PATH
          mkdir -p build
          cd build
          cmake ..
          cd ..

      # Setup Arduino command line - install esp32 and all the libs flux needs
      - name: Arduino - Install and setup the Arduino CLI
        uses: arduino/setup-arduino-cli@v1

      - name: Arduino - Start config file
        run: arduino-cli config init --additional-urls "https://github.com/earlephilhower/arduino-pico/releases/download/global/package_rp2040_index.json"

      - name: Arduino - Update index
        run: arduino-cli core update-index

      # Install RP2040 - 4.0.3 (Nov, 2024)
      - name: Arduino - Install rp2040 platform
        run: arduino-cli core install rp2040:rp2040@4.0.3

      # install the libraries Flux uses
      - name: Install Flux dependant libraries
        run: ./flux-sdk/install-libs.sh

      - name: Install The XBee LoRaWAN library
        run: |
          arduino-cli config set library.enable_unsafe_install true
          arduino-cli lib install --git-url "https://github.com/felixgalindo/XBeeArduino.git"
          arduino-cli lib install FastLED

      # Compile time - build the Firmware for the data logger.
      # Note:
      #   - The use of a full path to flux - this is needed or the build fails (relative paths get merged).
      #   - ** Nov 25 - for build testing, using the pro micro board definition until new board added

      - name: Compile DataLogger firmware binary
        run:
          arduino-cli compile --fqbn rp2040:rp2040:sparkfun_promicrorp2350 --export-binaries 
          ./sfeIoTNodeLoRaWAN/sfeIoTNodeLoRaWAN.ino --library ./SparkFun_IoTNodeLoRaWAN --clean

      # Upload the build files - bootloader, paritions, firmware
      - uses: actions/upload-artifact@v3
        with:
          name: Upload Build
          path: sfeIoTNodeLoRaWAN/build/rp2040.rp2040.sparkfun_promicrorp2350/sfeIoTNodeLoRaWAN.ino.uf2

      
